{"version":3,"sources":["constants.js","pages/home/home.js","pages/generators/political-compass/political-compass.js","components/sidebar/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["ROUTES","title","component","className","useState","topText","setTopText","leftText","setLeftText","bottomText","setBottomText","rightText","setRightText","stageRef","useRef","id","placeholder","value","onChange","e","target","type","onClick","dataUrl","current","toDataURL","pixelRatio","link","document","createElement","download","href","body","appendChild","click","removeChild","width","RECT_SIZE","height","ref","fill","x","y","points","stroke","CANVAS_SIZE","text","align","verticalAlign","padding","Object","keys","map","route","key","to","Component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uRAGMA,EAAS,CACX,IAAK,CACDC,MAAO,OACPC,UCJK,WACT,OAAQ,oCACJ,yBAAKC,UAAU,aACX,wBAAIA,UAAU,aAAd,YACA,uBAAGA,UAAU,QAAb,6CACA,wBAAIA,UAAU,SACd,wDDAR,gCAAiC,CAC7BF,MAAO,oBACPC,UEDiB,WAAO,IAAD,EAEGE,mBAAS,IAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,OAGKF,mBAAS,IAHd,mBAGpBG,EAHoB,KAGVC,EAHU,OAISJ,mBAAS,IAJlB,mBAIpBK,EAJoB,KAIRC,EAJQ,OAKON,mBAAS,IALhB,mBAKpBO,EALoB,KAKTC,EALS,KAOrBC,EAAWC,mBAYjB,OACI,yBAAKC,GAAI,oBAAqBZ,UAAW,UACrC,yBAAKA,UAAW,QACZ,oFAEA,yBAAKA,UAAW,sBACZ,yBAAKA,UAAW,iCACZ,2BAAOa,YAAa,MAAOC,MAAOZ,EAASa,SAAU,SAAAC,GAAC,OAAEb,EAAWa,EAAEC,OAAOH,WAEhF,yBAAKd,UAAW,iCACZ,2BAAOa,YAAa,OAAQC,MAAOV,EAAUW,SAAU,SAAAC,GAAC,OAAEX,EAAYW,EAAEC,OAAOH,UAC/E,2BAAOD,YAAa,QAASC,MAAON,EAAWO,SAAU,SAAAC,GAAC,OAAEP,EAAaO,EAAEC,OAAOH,WAEtF,yBAAKd,UAAW,iCACZ,2BAAOa,YAAa,SAAUC,MAAOR,EAAYS,SAAU,SAAAC,GAAC,OAAET,EAAcS,EAAEC,OAAOH,YAI7F,6BACI,4BAAQI,KAAK,SAASlB,UAAU,kBAAkBmB,QA7B9C,WAChB,IAAMC,EAAUV,EAASW,QAAQC,UAAU,CAACC,WAAY,IACpDC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAW,wBAChBH,EAAKI,KAAOR,EACZK,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLN,SAASI,KAAKG,YAAYR,KAsBd,mBAGR,yBAAKxB,UAAW,QACZ,kBAAC,QAAD,CAAOiC,MA7CHC,IA6CuBC,OA7CvBD,IA6C4CE,IAAK1B,GACjD,kBAAC,QAAD,KACI,kBAAC,OAAD,CAAM2B,KAAM,QAASJ,MA/CzBC,IA+C6CC,OA/C7CD,OAiDA,kBAAC,QAAD,KACI,kBAAC,QAAD,CAAOI,EAnDR,GAmD2BC,EAnD3B,IAoDK,kBAAC,OAAD,CAAMD,EAAG,EAAGC,EAAG,EAAGJ,OArD5B,IAqD+CF,MArD/C,IAqDiEI,KAAM,YAC7D,kBAAC,OAAD,CAAMC,EAAG,EAAGC,EAtDtB,IAsDoCJ,OAtDpC,IAsDuDF,MAtDvD,IAsDyEI,KAAM,YACrE,kBAAC,OAAD,CAAMC,EAvDhB,IAuD8BC,EAAG,EAAGJ,OAvDpC,IAuDuDF,MAvDvD,IAuDyEI,KAAM,YACrE,kBAAC,OAAD,CAAMC,EAxDhB,IAwD8BC,EAxD9B,IAwD4CJ,OAxD5C,IAwD+DF,MAxD/D,IAwDiFI,KAAM,aAEjF,kBAAC,QAAD,KACI,kBAAC,QAAD,CAAOG,OAAQ,CAxDrBN,YAFC,IA0DgFG,KAAM,QAASI,OAAQ,UAClG,kBAAC,QAAD,CAAOD,OAAQ,CAzDrBN,QAFC,GAEDA,KAyDiFG,KAAM,QAASI,OAAQ,UAClG,kBAAC,QAAD,CAAOD,OAAQ,CA1DrBN,YA0DgEQ,KAA6BL,KAAM,QAASI,OAAQ,UAC9G,kBAAC,QAAD,CAAOD,OAAQ,CA3DrBN,QA2DkDQ,IA3DlDR,KA2D6FG,KAAM,QAASI,OAAQ,WAElH,kBAAC,QAAD,KACI,kBAAC,OAAD,CAAME,KAAMzC,EAAS+B,MA/D7BC,IA+DiDC,OAhE9C,GAgEsES,MAAO,SAAUC,cAAe,SAAUC,QAAS,IACpH,kBAAC,OAAD,CAAMH,KAAMvC,EAAUmC,EAlEhC,IAkE8CD,EAjEzC,GAiE4DL,MAhE/DC,IAgEmFC,OAjEhF,GAiEwGS,MAAO,OAAQC,cAAe,MAAOC,QAAS,IACjJ,kBAAC,OAAD,CAAMH,KAAMrC,EAAYiC,EAAGG,IAA8BT,MAjEjEC,IAiEqFC,OAlElF,GAkE0GS,MAAO,SAAUC,cAAe,SAAUC,QAAS,IACxJ,kBAAC,OAAD,CAAMH,KAAMnC,EAAW+B,EApEjC,IAoE+CD,GAnE1C,GAmE8DL,MAlEjEC,IAkEqFC,OAnElF,GAmE0GS,MAAO,QAASC,cAAe,MAAOC,QAAS,YClEjK,oBACX,yBAAKlC,GAAG,UAAUZ,UAAU,YACxB,yBAAKA,UAAU,kBACX,+CAGJ,wBAAIA,UAAU,4BACT+C,OAAOC,KAAKnD,GAAQoD,KAAI,SAAAC,GAAK,OAC1B,wBAAIlD,UAAU,WAAWmD,IAAKD,GAC1B,kBAAC,IAAD,CAAME,GAAIF,EAAOlD,UAAU,YAAYH,EAAOqD,GAAOpD,cCV1D,aACX,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MAEA,yBAAKc,GAAG,WACJ,kBAAC,IAAD,KACKmC,OAAOC,KAAKnD,GAAQoD,KAAI,SAAAC,GACrB,IAAMG,EAAYxD,EAAOqD,GAAOnD,UAChC,OACI,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAML,EAAOC,IAAKD,GAC3B,kBAACG,EAAD,UAIZ,kBAAC,IAAD,CAAUD,GAAG,UCRbI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFvC,SAASwC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6941e6a6.chunk.js","sourcesContent":["import PoliticalCompass from \"./pages/generators/political-compass/political-compass\";\nimport Home from \"./pages/home/home\";\n\nconst ROUTES = {\n    \"/\": {\n        title: \"Home\",\n        component: Home\n    },\n    \"/generators/political-compass\": {\n        title: \"Political Compass\",\n        component: PoliticalCompass,\n    }\n}\n\nexport {ROUTES};","import React from \"react\";\n\nconst Home = () => {\n    return (<>\n        <div className=\"jumbotron\">\n            <h1 className=\"display-3\">Hello :)</h1>\n            <p className=\"lead\">I'm just having fun with some experiments</p>\n            <hr className=\"my-4\"/>\n            <p>Have a look around :D</p>\n        </div>\n    </>)\n};\n\n\nexport default Home;","import React, {useRef, useState} from \"react\";\nimport {Arrow, Group, Layer, Rect, Stage, Text} from \"react-konva\";\n\n\nconst RECT_SIZE = 200;\nconst CANVAS_PADDING = 20;\nconst CANVAS_SIZE = RECT_SIZE * 2 + CANVAS_PADDING * 2;\nconst CANVAS_MIDDLE = RECT_SIZE + CANVAS_PADDING;\n\nconst PoliticalCompass = () => {\n\n    const [topText, setTopText] = useState(\"\");\n    const [leftText, setLeftText] = useState(\"\");\n    const [bottomText, setBottomText] = useState(\"\");\n    const [rightText, setRightText] = useState(\"\");\n\n    const stageRef = useRef();\n\n    const exportImage = () => {\n        const dataUrl = stageRef.current.toDataURL({pixelRatio: 2});\n        let link = document.createElement(\"a\");\n        link.download = \"political-compass.png\";\n        link.href = dataUrl;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    return (\n        <div id={\"political-compass\"} className={\"d-flex\"}>\n            <div className={\"w-50\"}>\n                <h6>You can probably figure out what you need to do here</h6>\n\n                <div className={\"d-flex flex-column\"}>\n                    <div className={\"d-flex justify-content-center\"}>\n                        <input placeholder={\"Top\"} value={topText} onChange={e=>setTopText(e.target.value)} />\n                    </div>\n                    <div className={\"d-flex justify-content-center\"}>\n                        <input placeholder={\"Left\"} value={leftText} onChange={e=>setLeftText(e.target.value)} />\n                        <input placeholder={\"Right\"} value={rightText} onChange={e=>setRightText(e.target.value)} />\n                    </div>\n                    <div className={\"d-flex justify-content-center\"}>\n                        <input placeholder={\"Bottom\"} value={bottomText} onChange={e=>setBottomText(e.target.value)} />\n                    </div>\n                </div>\n\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={exportImage}>Save as Image</button>\n                </div>\n            </div>\n            <div className={\"w-50\"}>\n                <Stage width={CANVAS_SIZE} height={CANVAS_SIZE} ref={stageRef}>\n                    <Layer>\n                        <Rect fill={\"white\"} width={CANVAS_SIZE} height={CANVAS_SIZE}/>\n                    </Layer>\n                    <Layer>\n                        <Group x={CANVAS_PADDING} y={CANVAS_PADDING}>\n                            <Rect x={0} y={0} height={RECT_SIZE} width={RECT_SIZE} fill={\"#F9BABA\"}/>\n                            <Rect x={0} y={RECT_SIZE} height={RECT_SIZE} width={RECT_SIZE} fill={\"#C8E4BC\"}/>\n                            <Rect x={RECT_SIZE} y={0} height={RECT_SIZE} width={RECT_SIZE} fill={\"#92D9F8\"}/>\n                            <Rect x={RECT_SIZE} y={RECT_SIZE} height={RECT_SIZE} width={RECT_SIZE} fill={\"#E1C6DF\"}/>\n                        </Group>\n                        <Group>\n                            <Arrow points={[CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_PADDING]} fill={\"black\"} stroke={\"black\"}/>\n                            <Arrow points={[CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_PADDING,CANVAS_MIDDLE]} fill={\"black\"} stroke={\"black\"}/>\n                            <Arrow points={[CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_SIZE-CANVAS_PADDING]} fill={\"black\"} stroke={\"black\"}/>\n                            <Arrow points={[CANVAS_MIDDLE,CANVAS_MIDDLE,CANVAS_SIZE-CANVAS_PADDING,CANVAS_MIDDLE]} fill={\"black\"} stroke={\"black\"}/>\n                        </Group>\n                        <Group>\n                            <Text text={topText} width={CANVAS_SIZE} height={CANVAS_PADDING} align={\"center\"} verticalAlign={\"middle\"} padding={2}/>\n                            <Text text={leftText} y={RECT_SIZE} x={CANVAS_PADDING} width={CANVAS_SIZE} height={CANVAS_PADDING} align={\"left\"} verticalAlign={\"top\"} padding={2}/>\n                            <Text text={bottomText} y={CANVAS_SIZE - CANVAS_PADDING} width={CANVAS_SIZE} height={CANVAS_PADDING} align={\"center\"} verticalAlign={\"middle\"} padding={2}/>\n                            <Text text={rightText} y={RECT_SIZE} x={-CANVAS_PADDING} width={CANVAS_SIZE} height={CANVAS_PADDING} align={\"right\"} verticalAlign={\"top\"} padding={2}/>\n                        </Group>\n                    </Layer>\n                </Stage>\n            </div>\n        </div>\n    );\n}\n\nexport default PoliticalCompass;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport \"./sidebar.scss\";\nimport {ROUTES} from \"../../constants\";\n\nexport default () => (\n    <nav id=\"sidebar\" className=\"bg-light\">\n        <div className=\"sidebar-header\">\n            <h4>Yoru's Toolbox</h4>\n        </div>\n\n        <ul className=\"list-unstyled components\">\n            {Object.keys(ROUTES).map(route => (\n                <li className=\"nav-item\" key={route}>\n                    <Link to={route} className=\"nav-link\">{ROUTES[route].title}</Link>\n                </li>\n            ))}\n        </ul>\n\n    </nav>);","import React from \"react\";\nimport  {BrowserRouter, Route, Switch,Redirect} from \"react-router-dom\";\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport {ROUTES} from \"./constants\";\n\nexport default () => {\n    return (\n        <BrowserRouter>\n            <Sidebar/>\n\n            <div id=\"content\">\n                <Switch>\n                    {Object.keys(ROUTES).map(route => {\n                        const Component = ROUTES[route].component;\n                        return (\n                            <Route exact path={route} key={route}>\n                                <Component/>\n                            </Route>\n                        )\n                    })}\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}